INSERT INTO challenges (
    id,
    name,
    description,
    input,
    output,
    difficulty,
    stars,
    solved,
    starter_code,
    examples
  )
VALUES (
    1,
    'fibonacci',
    'Write a function that returns the sum of nth number in the Fibonacci sequence',
    'n (0 <= n <= 100)',
    'sum of nth number in the Fibonacci sequence',
    'easy',
    10,
    50,
    '{"python": "def fibonacci(n):\\n    pass", "javascript": "exports.fibonacci = function (n) {\\n    // your code here\\n}"}',
    '[{"input": "0", "output": "0", "explanation": "0th number in the Fibonacci sequence is 0"}, {"input": "1", "output": "1", "explanation": "1st number in the Fibonacci sequence is 1"}, {"input": "-1", "output": "1", "explanation": "Negative numbers are not allowed. The absolute value of -1 is 1"}, {"input": "6", "output": "8", "explanation": "0 + 1 + 1 + 2 + 3 + 5 = 8"}, {"input": "10", "output": "55", "explanation": "0 + 1 + 1 + 2 + 3 + 5 + 8 + 13 + 21 + 34 = 55"}]'
  ),
  (
    2,
    'factorial',
    'Write a function that returns the factorial of a number',
    'n (0 <= n <= 100)',
    'factorial of n',
    'easy',
    10,
    50,
    '{"python": "def factorial(n):\\n    pass", "javascript": "exports.factorial = function (n) {\\n    // your code here\\n}"}',
    '[{"input": "0", "output": "1", "explanation": "Factorial of 0 is 1"}, {"input": "1", "output": "1", "explanation": "Factorial of 1 is 1"}, {"input": "-1", "output": "Factorial of negative number is not possible", "explanation": "Negative numbers are not allowed"}, {"input": "5", "output": "120", "explanation": "5 * 4 * 3 * 2 * 1 = 120"}, {"input": "10", "output": "3628800", "explanation": "10 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1 = 3628800"}]'
  ),
  (
    3,
    'reverse_string',
    'Write a function that reverses a string',
    's (string)',
    'reversed string',
    'easy',
    10,
    50,
    '{"python": "def reverse_string(s):\\n    pass", "javascript": "exports.reverseString = function (str) {\\n    // your code here\\n}"}',
    '[{"input": "hello", "output": "olleh"}, {"input": "world", "output": "dlrow"}, {"input": "racecar", "output": "racecar"}]'
  ),
  (
    4,
    'anagram',
    'Write a function that checks if two strings are anagrams',
    's1 (string), s2 (string)',
    'True if s1 is an anagram of s2, False otherwise',
    'easy',
    10,
    50,
    '{"python": "def anagram(s1, s2):\\n    pass", "javascript": "exports.anagram = function (str1, str2) {\\n    // your code here\\n}"}',
    '[{"input": ["hello", "world"], "output": "False"}, {"input": ["listen", "silent"], "output": "True"}, {"input": ["racecar", "carrace"], "output": "True"}]'
  ),
  (
    5,
    'palindrome',
    'Write a function that checks if a string is a palindrome',
    's (string)',
    'True if s is a palindrome, False otherwise',
    'easy',
    10,
    50,
    '{"python": "def palindrome(s):\\n    pass", "javascript": "exports.palindrome = function (str) {\\n    // your code here\\n}"}',
    '[{"input": "hello", "output": "False"}, {"input": "0_0 (: /-\\ :) 0â€“0", "output": "True"}, {"input": "madam", "output": "True"}]'
  ),
  (
    11,
    'merge_intervals',
    'Write a function that merges overlapping intervals',
    'intervals (list of lists)',
    'list of merged intervals',
    'medium',
    20,
    30,
    '{"python": "def merge_intervals(intervals):\\n    pass", "javascript": "exports.mergeIntervals = function (intervals) {\\n    // your code here\\n}"}',
    '[{"input": "[[1,3],[2,6],[8,10],[15,18]]", "output": "[[1,6],[8,10],[15,18]]"}, {"input": "[[1,4],[4,5]]", "output": "[[1,5]]"}, {"input": "[[1,2],[3,5],[6,7],[8,10],[12,16]]", "output": "[[1,5],[6,7],[8,10],[12,16]]"}]'
  ),
  (
    12,
    'binary_search',
    'Write a function that performs binary search on a sorted list',
    'nums (sorted list of integers), target (integer)',
    'index of target if found, -1 if not found',
    'medium',
    20,
    30,
    '{"python": "def binary_search(nums, target):\\n    pass", "javascript": "exports.binarySearch = function (arr, target) {\\n    // your code here\\n}"}',
    '[{"input": "[1, 2, 3, 4, 5], 3", "output": "2"}, {"input": "[1, 2, 3, 4, 5], 6", "output": "-1"}, {"input": "[1, 3, 5, 7, 9], 5", "output": "2"}]'
  ),
  (
    13,
    'rotate_array',
    'Write a function that rotates an array to the right by k steps',
    'nums (list of integers), k (integer)',
    'rotated array',
    'medium',
    20,
    30,
    '{"python": "def rotate_array(nums, k):\\n    pass", "javascript": "exports.rotateArray = function (arr, k) {\\n    // your code here\\n}"}',
    '[{"input": "[1, 2, 3, 4, 5], 2", "output": "[4, 5, 1, 2, 3]"}, {"input": "[1, 2, 3], 4", "output": "[3, 1, 2]"}, {"input": "[1, 2, 3, 4, 5, 6, 7], 3", "output": "[5, 6, 7, 1, 2, 3, 4]"}]'
  ),
  (
    18,
    'subarray_sum_equals_k',
    'Write a function that finds the total number of continuous subarrays whose sum equals to a given target k',
    'nums (list of integers), k (integer)',
    'number of subarrays',
    'medium',
    20,
    30,
    '{"python": "def subarray_sum_equals_k(nums, k):\\n    pass", "javascript": "exports.subarraySumEqualsK = function (arr, k) {\\n    // your code here\\n}"}',
    '[]'
  ),
  (
    20,
    'kth_largest_element',
    'Write a function that finds the kth largest element in an unsorted array',
    'nums (list of integers), k (integer)',
    'kth largest element',
    'medium',
    20,
    30,
    '{"python": "def kth_largest_element(nums, k):\\n    pass", "javascript": "exports.kthLargestElement = function (arr, k) {\\n    // your code here\\n}"}',
    '[{"input": "[3, 2, 1, 5, 6, 4], 2", "output": "5"}, {"input": "[3, 2, 3, 1, 2, 4, 5, 5, 6], 4", "output": "4"}, {"input": "[-1, 2, 0], 1", "output": "2"}]'
  );